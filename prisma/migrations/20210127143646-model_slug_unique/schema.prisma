// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model Job {
  id  Int    @id @default(autoincrement())
  jid String @unique

  applyActionCTR    Int     @default(0)
  applyCTA          String
  companyName       String?
  createdEpoch      Int
  descriptionAsHTML String
  datePosted        String
  expiresEpoch      Int
  featured          Boolean @default(false)
  pageViews         Int     @default(0)
  salaryCurrency    String?
  salaryMin         Int?
  salaryMax         Int?
  title             String

  categoryId Int
  companyId  Int?
  locationId Int
  typeId     Int
  location   Location @relation(fields: [locationId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  company    Company? @relation(fields: [companyId], references: [id])
  tags       Tag[]    @relation(references: [id])
  type       Type     @relation(fields: [typeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@index([locationId], name: "locationId")
  @@index([categoryId], name: "categoryId")
  @@map(name: "jobs")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  jobs      Job[]
  slug      String   @default("") @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "categories")
}

model Company {
  id                Int      @id @default(autoincrement())
  cid               String   @unique
  email             String   @unique
  descriptionAsHTML String?
  headquaters       String
  logoUrl           String?
  name              String
  statement         String?
  verified          Boolean  @default(false)
  websiteUrl        String
  jobs              Job[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map(name: "companies")
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  jobs      Job[]
  slug      String   @default("") @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "locations")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  jobs      Job[]    @relation(references: [id])
  slug      String   @default("") @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "tags")
}

model Type {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  jobs      Job[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "types")
}
